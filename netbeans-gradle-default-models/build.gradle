apply plugin: 'java';

group = 'com.github.kelemen';
version = '1.2.7';
sourceCompatibility = '1.5';

ext.scriptFile = { String fileName ->
    return new File(new File(rootDir, 'common-scripts'), fileName);
}

def compilerOptions = [compileJava, compileTestJava]*.options;
compilerOptions*.encoding = 'UTF-8';
compilerOptions*.compilerArgs = ['-Xlint'];

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources';
    from sourceSets.main.allSource;
}

artifacts {
    archives jar
    archives sourcesJar
}

repositories {
    mavenCentral();

    maven {
        url 'http://repo.gradle.org/gradle/libs-releases-local'
    }

    maven {
        url 'http://repo.gradle.org/gradle/libs-snapshots-local'
    }
}

configurations {
    provided
}

dependencies {
    compile group: 'org.gradle', name: 'gradle-tooling-api', version: '1.10-20131011231056+0000';
    provided group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.6';

    testCompile group: 'junit', name: 'junit', version: '4.11';
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.5';
}

sourceSets.main.compileClasspath += configurations.provided

afterEvaluate {
    System.setProperty('line.separator', '\n');
}

apply from: scriptFile('maven-publish.gradle');
