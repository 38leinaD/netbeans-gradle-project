package org.netbeans.gradle.project.java.properties;

import org.netbeans.api.project.Project;
import org.netbeans.gradle.project.properties.ActiveSettingsQuery;
import org.netbeans.gradle.project.properties.DebugModeCombo;
import org.netbeans.gradle.project.properties.ProfileBasedCustomizer;
import org.netbeans.gradle.project.properties.ProfileBasedPanel;
import org.netbeans.gradle.project.properties.ProfileValuesEditor;
import org.netbeans.gradle.project.properties.ProfileValuesEditorFactory;
import org.netbeans.gradle.project.properties.PropertyReference;
import org.netbeans.gradle.project.properties.global.DebugMode;

public class JavaDebuggingPanel extends javax.swing.JPanel {
    private final DebugModeCombo debugModeComboHandler;

    public JavaDebuggingPanel() {
        initComponents();
        debugModeComboHandler = new DebugModeCombo(jDebugMode);
    }

    public static ProfileBasedCustomizer createDebuggingCustomizer(Project project) {
        return new ProfileBasedCustomizer(
                JavaDebuggingPanel.class.getName(),
                // TODO: I18N
                "Debugging - Java",
                createProfileBasedPanel(project));
    }

    public static ProfileBasedPanel createProfileBasedPanel(Project project) {
        final JavaDebuggingPanel customPanel = new JavaDebuggingPanel();
        return ProfileBasedPanel.createPanel(project, customPanel, new ProfileValuesEditorFactory() {
            @Override
            public ProfileValuesEditor startEditingProfile(String displayName, ActiveSettingsQuery profileQuery) {
                return customPanel.new PropertyValues(profileQuery);
            }
        });
    }

    private final class PropertyValues implements ProfileValuesEditor {
        public final PropertyReference<DebugMode> debugModeRef;
        private DebugMode currentDebugMode;

        public PropertyValues(ActiveSettingsQuery settings) {
            this.debugModeRef = JavaProjectProperties.debugMode(settings);
            this.currentDebugMode = debugModeRef.tryGetValueWithoutFallback();
        }

        @Override
        public void displayValues() {
            debugModeComboHandler.setSelectedDebugMode(currentDebugMode);
        }

        @Override
        public void readFromGui() {
            currentDebugMode = debugModeComboHandler.getSelectedDebugMode();
        }

        @Override
        public void applyValues() {
            debugModeRef.trySetValue(currentDebugMode);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDebugMode = new javax.swing.JComboBox<>();
        jDebugModeCaption = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jDebugModeCaption, org.openide.util.NbBundle.getMessage(JavaDebuggingPanel.class, "JavaDebuggingPanel.jDebugModeCaption.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDebugModeCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDebugMode, 0, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDebugModeCaption)
                    .addComponent(jDebugMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<DebugModeCombo.Item> jDebugMode;
    private javax.swing.JLabel jDebugModeCaption;
    // End of variables declaration//GEN-END:variables
}
