package org.netbeans.gradle.project.properties.ui;

import org.netbeans.gradle.project.NbGradleProject;
import org.netbeans.gradle.project.api.config.ActiveSettingsQuery;
import org.netbeans.gradle.project.api.config.PropertyReference;
import org.netbeans.gradle.project.api.config.ui.ProfileEditor;
import org.netbeans.gradle.project.api.config.ui.ProfileEditorFactory;
import org.netbeans.gradle.project.api.config.ui.ProfileInfo;
import org.netbeans.gradle.project.api.config.ui.StoredSettings;
import org.netbeans.gradle.project.properties.NbGradleCommonProperties;

@SuppressWarnings("serial")
public class ProjectAppearancePanel extends javax.swing.JPanel implements ProfileEditorFactory {
    private final ProjectNodeNamePanel nodeNamePanel;

    private ProjectAppearancePanel() {
        initComponents();

        nodeNamePanel = new ProjectNodeNamePanel(true);
        jProjectNodeNameHolder.add(nodeNamePanel);
        nodeNamePanel.setVisible(true);
    }

    public static ProfileBasedPanel createProfileBasedPanel(NbGradleProject project) {
        return ProfileBasedPanel.createPanel(project, new ProjectAppearancePanel());
    }

    @Override
    public ProfileEditor startEditingProfile(ProfileInfo profileInfo, ActiveSettingsQuery profileQuery) {
        return new PropertyRefs(profileQuery);
    }

    private final class PropertyRefs implements ProfileEditor {
        private final PropertyReference<String> displayNamePatternRef;

        public PropertyRefs(ActiveSettingsQuery settingsQuery) {
            this.displayNamePatternRef = NbGradleCommonProperties.displayNamePattern(settingsQuery);
        }

        @Override
        public StoredSettings readFromSettings() {
            return new StoredSettingsImpl(this);
        }

        @Override
        public StoredSettings readFromGui() {
            return new StoredSettingsImpl(this, ProjectAppearancePanel.this);
        }
    }

    private final class StoredSettingsImpl implements StoredSettings {
        private final PropertyRefs properties;
        private final String displayNamePattern;

        public StoredSettingsImpl(PropertyRefs properties) {
            this.properties = properties;
            this.displayNamePattern = properties.displayNamePatternRef.tryGetValueWithoutFallback();
        }

        public StoredSettingsImpl(PropertyRefs properties, ProjectAppearancePanel panel) {
            this.properties = properties;
            this.displayNamePattern = panel.nodeNamePanel.getNamePattern();
        }

        @Override
        public void displaySettings() {
            nodeNamePanel.updatePattern(displayNamePattern, properties.displayNamePatternRef);
        }

        @Override
        public void saveSettings() {
            properties.displayNamePatternRef.setValue(displayNamePattern);
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProjectNodeNameHolder = new javax.swing.JPanel();

        setLayout(new java.awt.GridLayout(1, 1));

        jProjectNodeNameHolder.setLayout(new java.awt.GridLayout(1, 1));
        add(jProjectNodeNameHolder);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jProjectNodeNameHolder;
    // End of variables declaration//GEN-END:variables
}
